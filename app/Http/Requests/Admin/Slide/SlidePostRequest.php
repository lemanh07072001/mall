<?php

namespace App\Http\Requests\Admin\Slide;

use App\Rules\Admin\Category\LinkRule;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Support\Str;

class SlidePostRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, mixed>
     */
    public function rules()
    {
        if (!empty(request()->route()->parameters['id'])){
            $id = request()->route()->parameters['id'];
        }

        if (!empty($id)){
            $rule = [
                'name' => 'required|string|max:255|unique:slides,name,'.$id,
                'slug' => 'required',

            ];
        }else{
            $rule = [
                'name' => 'required|string|max:255|unique:slides',
                'slug' => 'required',
                'link' => $this->filled('link')?'required|url:http,https':'',
                'image' => 'required',
            ];
        }
        return $rule;
    }

    protected function prepareForValidation()
    {
        $this->merge([
            'slug' => Str::slug($this->name),

        ]);


    }

    public function messages()
    {
        return [
            'name.required' => 'Dữ liệu không được để trống',
            'name.string' => 'Dữ liệu không đúng định dạng',
            'name.max' => 'Dữ liệu không được quá :max ký tự',
            'name.unique' => 'Dữ liệu đã tồn tại trong hệ thống hoặc trong thùng rác',
            'slug.required' => 'Dữ liệu không được để trống',
            'link.url' => 'Liên kết phải là một URL hợp lệ.',
             'image.required' => 'Dữ liệu không được để trống',
            'image.image' => 'Định dạng ảnh không đúng',
        ]; // TODO: Change the autogenerated stub
    }
}
